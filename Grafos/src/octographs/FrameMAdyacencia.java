/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package octographs;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author audoban
 */
class RowHeaderRenderer extends JButton implements ListCellRenderer {

    RowHeaderRenderer(JTable table) {
        JTableHeader header = table.getTableHeader();
        setOpaque(true);
        setBorder(header.getBorder());
        setHorizontalAlignment(CENTER);
        setForeground(header.getForeground());
        setBackground(header.getBackground());
        setBounds(header.getBounds());
        setFont(header.getFont());

    }

    @Override
    public Component getListCellRendererComponent(JList list, Object value,
            int index, boolean isSelected, boolean cellHasFocus) {
        setText((value == null) ? "" : value.toString());
        return this;
    }
}

public class FrameMAdyacencia extends javax.swing.JFrame {

    /**
     * Creates new form FrameMAdyacencia
     */
    public FrameMAdyacencia(Proceso proceso) {
        this.proceso = proceso;
        initComponents();
        initTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbMA = new javax.swing.JComboBox();
        panel0 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spinLongitud = new javax.swing.JSpinner();
        btnCalcular = new javax.swing.JButton();
        javax.swing.JSeparator jSeparator1 = new javax.swing.JSeparator();
        panel = new javax.swing.JPanel();
        mA = new javax.swing.JScrollPane();
        tMA = new javax.swing.JTable();
        mA2 = new javax.swing.JScrollPane();
        tMA2 = new javax.swing.JTable();
        mA3 = new javax.swing.JScrollPane();
        tMA3 = new javax.swing.JTable();
        mA4 = new javax.swing.JScrollPane();
        tMA4 = new javax.swing.JTable();
        mA5 = new javax.swing.JScrollPane();
        tMA5 = new javax.swing.JTable();
        javax.swing.Box.Filler filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setTitle("Matriz de adyacencia");
        setMinimumSize(new java.awt.Dimension(480, 240));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setSize(new java.awt.Dimension(150, 150));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        cmbMA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Matriz de adyacencia", "Matriz de caminos de longitud 2", "Matriz de caminos de longitud 3", "Matriz de caminos de longitud 4", "Matriz de caminos de longitud 5" }));
        cmbMA.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMAItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbMA);

        panel0.setLayout(new java.awt.GridLayout(1, 3, 7, 5));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Longitud:");
        panel0.add(jLabel1);

        spinLongitud.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        spinLongitud.setToolTipText("Especifica la longitud de los caminos");
        spinLongitud.setMinimumSize(new java.awt.Dimension(100, 28));
        panel0.add(spinLongitud);

        btnCalcular.setText("Calcular");
        btnCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCalcularMouseClicked(evt);
            }
        });
        panel0.add(btnCalcular);

        getContentPane().add(panel0);
        getContentPane().add(jSeparator1);

        panel.setLayout(new java.awt.CardLayout());

        tMA.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tMA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tMA.setColumnSelectionAllowed(true);
        tMA.setRowHeight(20);
        mA.setViewportView(tMA);
        tMA.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        panel.add(mA, "Matriz de adyacencia");

        tMA2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tMA2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tMA2.setColumnSelectionAllowed(true);
        tMA2.setRowHeight(20);
        mA2.setViewportView(tMA2);
        tMA2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        panel.add(mA2, "Matriz de caminos de longitud 2");

        tMA3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tMA3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tMA3.setColumnSelectionAllowed(true);
        tMA3.setRowHeight(20);
        mA3.setViewportView(tMA3);
        tMA3.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        panel.add(mA3, "Matriz de caminos de longitud 3");

        tMA4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tMA4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tMA4.setColumnSelectionAllowed(true);
        tMA4.setRowHeight(20);
        mA4.setViewportView(tMA4);
        tMA4.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        panel.add(mA4, "Matriz de caminos de longitud 4");

        tMA5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tMA5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tMA5.setColumnSelectionAllowed(true);
        tMA5.setRowHeight(20);
        mA5.setViewportView(tMA5);
        tMA5.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        panel.add(mA5, "Matriz de caminos de longitud 5");

        getContentPane().add(panel);
        getContentPane().add(filler2);

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbMAItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMAItemStateChanged
        CardLayout card = (CardLayout) (panel.getLayout());
        card.show(panel, (String) evt.getItem());
        this.setTitle((String) evt.getItem());
        spinLongitud.setValue(cmbMA.getSelectedIndex() + 1);
    }//GEN-LAST:event_cmbMAItemStateChanged

    private void btnCalcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCalcularMouseClicked
        int longitud = (Integer) spinLongitud.getValue();
        CardLayout card = (CardLayout) panel.getLayout();
        final String mn = "M^" + longitud;
        this.setTitle(mn);
        if (longitud <= 5) {
            cmbMA.setSelectedIndex(longitud - 1);
            return;
        } else {
            for (Component c : panel.getComponents()) {
                if (c.getName() != null && c.getName().equals(mn)) {
                    card.show(panel, mn);
                    return;
                }
            }
        }
        createTable(proceso.adyPotencia(longitud));
        card.show(panel, mn);
    }//GEN-LAST:event_btnCalcularMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMAdyacencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMAdyacencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMAdyacencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMAdyacencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrameMAdyacencia(null).setVisible(true);
            }
        });
    }

    private final Proceso proceso;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JComboBox cmbMA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane mA;
    private javax.swing.JScrollPane mA2;
    private javax.swing.JScrollPane mA3;
    private javax.swing.JScrollPane mA4;
    private javax.swing.JScrollPane mA5;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panel0;
    private javax.swing.JSpinner spinLongitud;
    private javax.swing.JTable tMA;
    private javax.swing.JTable tMA2;
    private javax.swing.JTable tMA3;
    private javax.swing.JTable tMA4;
    private javax.swing.JTable tMA5;
    // End of variables declaration//GEN-END:variables

    private void initTables() {
        if (proceso == null) {
            return;
        }
        initTable(tMA, mA, proceso.getMatrizAdyacencia());
        initTable(tMA2, mA2, proceso.adyPotencia(2));
        initTable(tMA3, mA3, proceso.adyPotencia(3));
        initTable(tMA4, mA4, proceso.adyPotencia(4));
        initTable(tMA5, mA5, proceso.adyPotencia(5));
    }

    private void createTable(long data[][]) {
        if (data == null) {
            return;
        }
        JTable table = new JTable();
        JScrollPane pane = new JScrollPane();
        pane.setName("M^" + (Integer) spinLongitud.getValue());

        table.setColumnSelectionAllowed(true);
        table.setRowHeight(20);
        initTable(table, pane, data);
        pane.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.setFont(new java.awt.Font("Dialog", 1, 12));
        table.setColumnSelectionAllowed(true);
        table.setRowHeight(20);
        panel.add(pane, "M^" + (Integer) spinLongitud.getValue());
    }

    private void initTable(JTable table, JScrollPane scroll, long data[][]) {
        Object nodos[] = new Object[proceso.ORDEN];
        Object dataObject[][] = new Object[proceso.ORDEN][proceso.ORDEN];
        System.arraycopy(proceso.getNodos(), 0, nodos, 0, nodos.length);
        for (int i = 0; i < proceso.ORDEN; i++) {
            for (int j = 0; j < proceso.ORDEN; j++) {
                dataObject[i][j] = data[i][j];
            }
        }

        DefaultTableModel model = new DefaultTableModel(dataObject, nodos) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        table.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        table.setModel(model);
        JList rowHeader = new JList(proceso.getNodos());
        rowHeader.setCellRenderer(new RowHeaderRenderer(table));
        rowHeader.setFixedCellHeight(20);
        rowHeader.setFixedCellWidth(80);
        scroll.setRowHeaderView(rowHeader);
    }
}
